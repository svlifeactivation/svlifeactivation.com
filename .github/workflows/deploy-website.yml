# vim: si:ts=2:sts=2:sw=2
# This is a basic workflow to help you get started with Actions

name: Deploy website

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      branch:
        description: Branch
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Create deployment
      uses: maxkomarychev/oction-create-deployment@v0.7.1
      id: deployment
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.event.inputs.branch }}
        environment: ${{ github.event.inputs.branch }}

    - name: Update deployment status (in_progress)
      uses: maxkomarychev/oction-create-deployment-status@v0.7.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        deployment_id: ${{ steps.deployment.outputs.id }}
        state: in_progress

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: actions/checkout@v2
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: actions/cache@v2 for npm
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: actions/cache@v2 for pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r scripts/requirements.txt
        export NPM_CONFIG_USERCONFIG=.npmrc
        npm config set audit false
        npm config set fund false
        npm config set loglevel error
        npm config set optional false
        npm config set prefer-offline true

    - name: Build website
      run: |
        python $GITHUB_WORKSPACE/scripts/build_site.py built
        cd built
        python $GITHUB_WORKSPACE/scripts/add_environment.py ${{ github.event.inputs.branch }}

    - name: Publish website
      uses: cloudflare/wrangler-action@1.2.0
      with:
        apiToken: ${{ secrets.CF_API_TOKEN }}
        workingDirectory: built
        environment: ${{ github.event.inputs.branch }}

    - name: Update deployment status (success)
      uses: maxkomarychev/oction-create-deployment-status@v0.7.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        deployment_id: ${{ steps.deployment.outputs.id }}
        state: success
        environment_url: https://${{ github.event.inputs.branch }}.svlifeactivation.com

    - name: Update deployment status (failure)
      if: failure()
      uses: maxkomarychev/oction-create-deployment-status@v0.7.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        deployment_id: ${{ steps.deployment.outputs.id }}
        state: failure
